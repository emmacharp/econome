@charset "utf-8";

/* SuperDIV - Conteneur multi-usage ----------------------- */
	/* NB — Limitations :
	- Ne peut recevoir d'arrière plan.
	- Ne peut contenir de marge interne (padding).

	Appliquer plutôt sur un parent si nécessaire */

	/* Modèles de conteneur ------------ */
	/* Grille fluide / Albatross ---------- */
	/* Holy Albatross. Voir Heydon Pickering :
		(https://heydonworks.com/article/the-flexbox-holy-albatross/) */
		.grille {
			--DivItemBasis: calc((54ch - 100%) * 999);
			--DivItemGrow: 1;
			/* --DivItemShrink: 0; */
			--DivItemGutter: var(--Row);
			--DivItemMaxWidth: 100%;
		}

	/* Conteneur de prose ------------- */
		.prose {
			--DivDisplay: block;
			max-width: 70ch;
			column-width: 30ch;
			column-count: 2;
			column-gap: var(--Row);
		}

		.prose>* {
			--DivItemGutter: 0;
			--DivItemMaxWidth: 22ch;
		}

		.prose>*+* {
			margin-top: calc(var(--Row) / 2);
		}

		.prose>*:only-child {
			column-span: all;
			max-width: 45ch;
			margin-left: auto;
			margin-right: auto;
		}

	/* Échaffaudage : propriétés et valeurs par défaut --------- */
	/* 1. Affichage & occupation de l'espace ---- */
		div {
		/* Contexte flex avec
			bris de rangée pour la fluidité */
			display: var(--DivDisplay, flex);
			flex-wrap: wrap;
		/* Permettre l'héritage des règles d'alignement.
			Facilite l'extension par les parents */
			justify-content: inherit;
			align-items: inherit;
		}

		div>* {
		/* Dimensions initiales
			(peuvent être ajustées !) */
			flex-basis: var(--DivItemBasis, auto);
			max-width: var(--DivItemMaxWidth, initial);
		/* Distribuer également l'espace
			vacant parmis les enfants */
			flex-grow: var(--DivItemGrow, 0);
			flex-shrink: var(--DivItemShrink, 1);
		}

	/* 2. Rythme interne et gouttières ---- */
		/* Marges universelles permettant
			l'adaptation fluide. Les divs sans classes
			sont exclus pour mieux gérer l'inclusion successive */
		div>:where(*:not(div:not([class]))) {
			margin-left:  var(--DivItemGutter, 0);
			margin-top:  var(--DivItemGutter, 0);
		}

		/* Compenser pour les marges universelles
		(et ainsi le dédoublement) */
		*:not(div)>div {
			margin-top: var(--DivGutter, calc(-1 * var(--DivItemGutter, 0)));
			margin-left: var(--DivGutter, calc(-1 * var(--DivItemGutter, 0)));
		}

	/* 3. Rythme externe ---- */
		/* Annuler la compensation des marges
			(voir 2. ci-haut) lorsque précédé */
		*:not(div)>*+div	{
			margin-top: 0;
		}

		/* Briser la chaîne d'héritage
			pour permettre l'inclusion successive */
		div *:not(div)>* {
			--DivItemBasis: initial;
			--DivItemGutter: initial;
			--DivGutter: initial;
			--DivItemGrow: initial;
		}

		div {
			margin: initial;
		}

		/* 4. Dimensions des enfants & contenus ---- */
		/* Dimension minimale de tout enfant.
			Permet l'adaptation. Peut être ajusté */
		/* div>* { */
		/* 	min-width: var(--DivItemMinWidth, initial); */
		/* } */

		/* Largeur minimale de tout contenu texte.
			Force l'adaptation. Peut être ajusté */
		/* div h1, */
		/* div h2, */
		/* div h3, */
		/* div h4, */
		/* div h5, */
		/* div h6, */
		/* div p { */
		/* 	min-width: 10ch; */
		/* } */

		/* Largeur minimale des images en tout genre
			Force l'adaptation. Peut être ajusté */
		/* div img, */
		/* div picture { */
		/* 	min-width: 8ch; */
		/* } */

